#define WIDTH 16
#define HEIGHT 15
#define NUM_LEDS WIDTH * HEIGHT
#define BRIGHTNESS 20
#define LED_PIN 6
#include <FastLED.h>
CRGB leds[NUM_LEDS];


const uint32_t frame0[]  = {
0x0065cc, 0x005fc7, 0xe979ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xdf78ff, 0xe979ff, 0x005fc7, 0x0065cc, 
0x0062ca, 0xb7edff, 0xf3ffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xdcffff, 0xf3ffff, 0xb7edff, 0x0062ca, 
0x0066cd, 0x001988, 0xffffff, 0xfafbfa, 0xfbfbfb, 0xfbfbfb, 0xfbfbfb, 0xfbfbfb, 0xfbfbfb, 0xfbfbfb, 0xfbfbfb, 0xfbfbfb, 0xfafbfa, 0xffffff, 0x001888, 0x0066cd, 
0x0063ca, 0x33b4ff, 0xffffff, 0xc5c5ff, 0xc8c7ff, 0xc8c7ff, 0xc8c7ff, 0xc8c7ff, 0xc8c7ff, 0xc8c7ff, 0xc8c7ff, 0xc8c7ff, 0xc5c5ff, 0xffffff, 0x6dccff, 0x0062ca, 
0x0062c9, 0x31afff, 0xffffff, 0xf4f7f7, 0xf5f8f7, 0xf5f8f7, 0xf5f8f7, 0xf5f8f7, 0xf5f8f7, 0xf5f8f7, 0xf5f8f7, 0xf5f8f7, 0xf4f7f7, 0xffffff, 0x46b9ff, 0x0061c9, 
0x0062c9, 0x31afff, 0xffffff, 0xc6c6ff, 0xc8c8ff, 0xc8c8ff, 0xc8c8ff, 0xc8c8ff, 0xc8c8ff, 0xc8c8ff, 0xc8c8ff, 0xc8c8ff, 0xc6c6ff, 0xffffff, 0x24aaff, 0x0062c9, 
0x0062c9, 0x31afff, 0xffffff, 0xebf1f3, 0xedf2f4, 0xedf2f4, 0xedf2f4, 0xedf2f4, 0xedf2f4, 0xedf2f4, 0xedf2f4, 0xedf2f4, 0xebf1f3, 0xffffff, 0x029dff, 0x0063c9, 
0x0062c9, 0x33afff, 0xffffff, 0xf4f1f2, 0xf5f2f3, 0xf5f2f3, 0xf5f2f3, 0xf5f2f3, 0xf5f2f3, 0xf5f2f3, 0xf5f2f3, 0xf5f2f3, 0xf4f1f2, 0xffffff, 0x0094ff, 0x0063c9, 
0x0062c9, 0x3cb3ff, 0x079cff, 0x008af6, 0x008ef9, 0x0090fb, 0x0090fb, 0x0090fb, 0x0090fb, 0x0090fb, 0x0090fb, 0x008ef9, 0x008df9, 0x1d75d4, 0x0092fa, 0x0064ca, 
0x0062c9, 0x3eb4ff, 0x12a0ff, 0x0089f0, 0x0052bd, 0x00218c, 0x00228e, 0x00228e, 0x00228e, 0x00228e, 0x00218d, 0x0064cb, 0x0060c8, 0x81b9f4, 0x0089f1, 0x0064ca, 
0x0062c9, 0x3eb4ff, 0x12a1ff, 0x007be7, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x005fca, 0x0060c9, 0xacd7ff, 0x0081e9, 0x0064ca, 
0x0062c9, 0x3eb4ff, 0x12a1ff, 0x0074e0, 0xffffff, 0x001a8b, 0x0075e4, 0xe2ddff, 0xc8c8ff, 0xcecffd, 0xe0defc, 0x005fca, 0x0060c9, 0xaad6ff, 0x007ae3, 0x0065cb, 
0x0064cb, 0x3fb6ff, 0x12a2ff, 0x006dd8, 0xffffff, 0x00258f, 0x0075de, 0xd6d0ff, 0xd1d2fd, 0xd6d9fa, 0xe7e6f9, 0x005fca, 0x0060c9, 0xaad6ff, 0x0072db, 0x0065cb, 
0x0145aa, 0x1f81da, 0x14a6ff, 0x0066d1, 0xfef6ff, 0x001f8b, 0x0067d3, 0xdbd6ff, 0xd6d9fa, 0xdbdff7, 0xeeeef7, 0x005fca, 0x0060c9, 0xaad7ff, 0x006ad3, 0x0066cc, 
0xffffff, 0x0446a9, 0x0b7cde, 0x0065cf, 0xf1e9ff, 0xe0daff, 0xe7e0ff, 0xe4e3ff, 0xe7e9fc, 0xeef0fa, 0xfefef8, 0x0062cd, 0x0064cc, 0xb0deff, 0x0067cf, 0x0068ce, 


};

void setup() {
  Serial.begin(9600);
  FastLED.setBrightness(BRIGHTNESS);
  FastLED.addLeds<WS2812B, LED_PIN, GRB>(leds, NUM_LEDS).setCorrection( TypicalLEDStrip );

  matrixDraw(frame0);
}

void loop() {

}

void matrixDraw(uint32_t frame[]) {
  for (int i = 0; i < HEIGHT; i++) {              // строки
    for (int j = 0; j < WIDTH; j++) {             // столбцы
      if (i % 2 != 0)                                              // если чётная строка
        leds[i * WIDTH + j] = frame[i * WIDTH + j];                // заливаем в прямом порядке
      else                                                         // если нечётная
        leds[i * WIDTH + j] = frame[i * WIDTH + WIDTH - j - 1];    // заливаем в обратном порядке
    }
  }
  FastLED.show();
}
